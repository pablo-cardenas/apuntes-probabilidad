[{"path":"index.html","id":"prefacio","chapter":"Prefacio","heading":"Prefacio","text":"Apuntes de clase.","code":""},{"path":"conteo-y-probabilidad.html","id":"conteo-y-probabilidad","chapter":"1 Conteo y Probabilidad","heading":"1 Conteo y Probabilidad","text":"","code":""},{"path":"conteo-y-probabilidad.html","id":"problema-de-cumpleaños","chapter":"1 Conteo y Probabilidad","heading":"1.1 Problema de cumpleaños","text":"Hay \\(k\\) personas en un cuarto.\nSupon que los cumpleaños de cada persona son igualmente probables de ocurrir en los \\(365\\) días del año,\ny los cumpleaños son independientes.\nCuál es la probabilidad que al menos haya un par de personas con el mismo cumpleaños.","code":""},{"path":"conteo-y-probabilidad.html","id":"usando-un-contador","chapter":"1 Conteo y Probabilidad","heading":"1.1.1 Usando un contador","text":"","code":"\nset.seed(42)\nn <- 100  # número de simulaciones\nk <- 10  # número de personas\ncount <- 0\nfor (i in 1:n) {\n  x <- sample(365, k, replace = T)\n  coinciden <- any(table(x) > 1)\n  if (coinciden) {\n    count <- count + 1\n  }\n}\ncount / n## [1] 0.13"},{"path":"conteo-y-probabilidad.html","id":"usando-vectores","chapter":"1 Conteo y Probabilidad","heading":"1.1.2 Usando vectores","text":"","code":"\nset.seed(42)\nn <- 100  # número de simulaciones\nk <- 10  # número de personas\ny <- rep(0, n)\nfor (i in 1:n) {\n  x <- sample(365, 10, replace = T)\n  y[i] <- any(table(x) > 1)\n}\nmean(y)## [1] 0.13"},{"path":"conteo-y-probabilidad.html","id":"usando-replicate","chapter":"1 Conteo y Probabilidad","heading":"1.1.3 Usando replicate","text":"","code":"\nset.seed(42)\nn <- 100  # número de simulaciones\nk <- 10  # número de personas\nx <- replicate(n, any(table(sample(365, k, replace = T)) > 1))\nmean(x)## [1] 0.13"},{"path":"conteo-y-probabilidad.html","id":"matching-problem-de-de-montmort","chapter":"1 Conteo y Probabilidad","heading":"1.2 Matching problem de De Montmort","text":"Considera un mazo de \\(n\\) cartas bien barajadas y etiquetadas del \\(1\\) al \\(n\\).\nVas volteando las cartas uno uno, diciendo los numeros del \\(1\\) al \\(n\\).\nGanas el juego si, en algún punto, el número dicho es el mismo de la etiqueta de la carta volteada.\n¿Cuál es la probabilidad de ganar?","code":"\nset.seed(42)\nn <- 10  # número de cartas\ny <- replicate(1000, any(sample(n) == 1:n))\nmean(y)## [1] 0.658"},{"path":"conteo-y-probabilidad.html","id":"error-de-leibniz","chapter":"1 Conteo y Probabilidad","heading":"1.3 Error de Leibniz","text":"Si se lanzan dos dados, ¿es más probable que la suma sea 11 o que sea 12?La probabilidad de que la suma sea 11La probabilidad de que la suma sea 12","code":"\nset.seed(42)\nn <- 2000\ndado1 <- sample(6, n, replace = T)\ndado2 <- sample(6, n, replace = T)\nmean(dado1 + dado2 == 11)## [1] 0.0565\nmean(dado1 + dado2 == 12)## [1] 0.0275"},{"path":"conteo-y-probabilidad.html","id":"full-house-en-poker","chapter":"1 Conteo y Probabilidad","heading":"1.4 Full house en poker","text":"¿Cuál es la probabilidad de un full house?","code":"\nset.seed(42)\nx <- replicate(20000, {\n  mano <- sample(52, 5)\n  table_mano <- table(mano %% 13)\n  all(2 <= table_mano & table_mano <= 3)\n})\nmean(x)## [1] 0.0013"},{"path":"conteo-y-probabilidad.html","id":"lema-de-borel-cantelli","chapter":"1 Conteo y Probabilidad","heading":"1.5 Lema de Borel-Cantelli","text":"Lemma 1.1  (Teorema de Borel-Cantelli) Si \\(\\displaystyle\\sum_{n=1}^\\infty {\\mathrm{P}(A_n)} = \\infty\\) y los eventos \\((A_n)_ {n=1}^\\infty\\) son independientes,\nentonces \\(\\displaystyle\\mathrm{P}(A_n\\text{ rec.}) = 1\\)Example 1.1  Sean \\(q \\\\mathbb{N}\\), \\(\\Omega = \\{0, 1\\}^\\mathbb{N}\\) y \\(A_n = \\{\\omega \\\\Omega \\,|\\, \\omega_{nq+1} = \\omega_{nq+2} = \\cdots = \\omega_{(n+1)q-1} = 1\\}\\).\nLuego, por el lema 1.1, \\(\\displaystyle\\mathrm{P}(A_n\\text{ rec.}) = 1\\).Digamos que \\(q = 4\\).\nEn una muestra \\(\\omega\\), se cumplir que \\(A_n\\) sea recurrente.\nPrimero encontramos los primeros 5 \\(n\\)’s que cumplen \\(\\omega \\A_n\\)Esos son los primeros 5 \\(n\\)’s que cumplen \\(\\omega \\A_n\\).\nAhora ploteamos la muestra. De rojo se muestra las veces que cumple.Ahora encontremos los 10 siguentes \\(n\\)’s que cumplen.","code":"\nset.seed(42)\nq <- 4\nmonedas_lanzadas <- c()\nexito <- c()\nfor (i in 1:5) {\n  repeat {\n    q_monedas_lanzadas <- sample(c(0, 1), q, replace = T)\n    monedas_lanzadas <- c(monedas_lanzadas, q_monedas_lanzadas)\n    if (all(q_monedas_lanzadas == 1)) {\n      exito <- c(exito, T)\n      break\n    }\n    exito <- c(exito, F)\n  }\n}\nwhich(exito)## [1]  2  5 12 14 19\ncolor <- rep(ifelse(exito, \"red\", \"black\"), each = q)\ncex <- rep(ifelse(exito, 1, 1), each = q)\nplot(monedas_lanzadas, pch = 1, col = color, cex = cex)\nfor (i in 1:10) {\n  repeat {\n    q_monedas_lanzadas <- sample(c(0, 1), q, replace = T)\n    monedas_lanzadas <- c(monedas_lanzadas, q_monedas_lanzadas)\n    if (all(q_monedas_lanzadas == 1)) {\n      exito <- c(exito, T)\n      break\n    }\n    exito <- c(exito, F)\n  }\n}\nwhich(exito)##  [1]   2   5  12  14  19  49  57 106 142 151 173 253 301 310 336\ncolor <- rep(ifelse(exito, \"red\", \"black\"), each = q)\ncex <- rep(ifelse(exito, 4, 1), each = q)\nplot(monedas_lanzadas, pch = \".\", col = color, cex = cex)"},{"path":"probabilidad-condicional.html","id":"probabilidad-condicional","chapter":"2 Probabilidad Condicional","heading":"2 Probabilidad Condicional","text":"","code":""},{"path":"probabilidad-condicional.html","id":"problema-de-los-dos-hijos","chapter":"2 Probabilidad Condicional","heading":"2.1 Problema de los dos hijos","text":"Muestras aleatoriasUna familia tiene dos hijos.\nEl mayor es niña.\n¿Cuál es la probabilidad que ambos hijos sean niñas?Una familia tiene dos hijos.\nAl menos uno de los hijos es niño.\n¿Cuál es la probabilidad que ambos hijos sean niños?Una familia tiene dos hijos.\nAleatoreamente, te encuentras con uno de los dos y te das cuenta que es niña.\n¿Cuál es la probabilidad que ambos hijos sean niñas?Una familia tiene dos hijos.\nEncuentra la probabilidad de que ambos hijos sean niñas, dado que al menos uno de los dos es una niña que nació en invierno.\nAdemás, asume que nacer cada una de las 4 estaciones tiene la misma probabilidad y que es independiente del género.","code":"\nset.seed(42)\nn <- 10^6\nhijo1 <- sample(c(\"niño\", \"niña\"), n, replace = T)\nhijo2 <- sample(c(\"niño\", \"niña\"), n, replace = T)\nn_b <- sum(hijo1 == \"niña\")\nn_ab <- sum(hijo1 == \"niña\" & hijo2 == \"niña\")\nn_ab / n_b## [1] 0.5007114\nn_b <- sum(hijo1 == \"niño\" | hijo2 == \"niño\")\nn_ab <- sum(hijo1 == \"niño\" & hijo2 == \"niño\")\nn_ab / n_b## [1] 0.333509\nset.seed(43)\nhijo_encontrado <- sample(2, n, replace = T)\ngenero_encontrado <- ifelse(hijo_encontrado == 1, hijo1, hijo2)\nn_b <- sum(genero_encontrado == \"niña\")\nn_ab <- sum(hijo1 == \"niña\" & hijo2 == \"niña\")\nn_ab / n_b## [1] 0.5005504\nset.seed(44)\nestaciones <- c(\"primavera\", \"verano\", \"otoño\", \"invierno\")\nestacion1 <- sample(estaciones, size = n, replace = T)\nestacion2 <- sample(estaciones, size = n, replace = T)\n\nn_b <- sum((hijo1 == \"niña\" & estacion1 == \"invierno\") |\n           (hijo2 == \"niña\" & estacion2 == \"invierno\"))\nn_ab <- sum((hijo1 == \"niña\" & hijo2 == \"niña\") &\n            (estacion1 == \"invierno\" | estacion2 == \"invierno\"))\nn_ab / n_b## [1] 0.4673629"},{"path":"probabilidad-condicional.html","id":"ruina-del-apostador","chapter":"2 Probabilidad Condicional","heading":"2.2 Ruina del Apostador","text":"Dos apostadores, \\(\\) y \\(B\\), hacen una secuencia de apuestas de 1 sol.\nEn cada apuesta, el apostador \\(\\) tiene probabilidad de ganar \\(p\\) y el apostador \\(B\\) tiene probabilidad de ganar \\(q = 1 - p\\).\nEl apostador \\(\\) empieza con \\(\\) soles y el apostador \\(B\\) empieza con \\(n - \\) soles.\nEl juego temina cuando alguno de los apostadores queda en ruina.\n¿Cuál es la probabilidad de que \\(\\) pierda el juego?\\[\nP(\\{\\text{pierde}\\}) = \\begin{cases}\n  \\frac{1 - {\\left(\\frac{p}{q}\\right)}^{N-}}{1 - {\\left(\\frac{p}{q}\\right)}^{N}} & p \\neq 1/2 \\\\\n  \\frac{N-}{N} & p = 1/2\n\\end{cases}\n\\]","code":"\nn <- 10\ni <- 3\np <- 0.5\ntermina <- replicate(1000, {\n  while (!(i %in% c(0, n))) {\n    paso <- 2 * sample(2, 1, prob = c(1 - p, p)) - 3\n    i <- i + paso\n  }\n  i\n})\ntable(termina)## termina\n##   0  10 \n## 718 282"},{"path":"probabilidad-condicional.html","id":"monty-hall","chapter":"2 Probabilidad Condicional","heading":"2.3 Monty Hall","text":"En un show de televisión, un concursante escoge una de tres puertas cerradas, dos de las cuales tienen una cabra y una tiene un carro.\nEl anfitrión conoce donde está el carro, entonces abre una de las puertas restantes (que es la puerta elegida ni la que contiene el carro) y muestra la cabra.\nLuego, se le ofrece al concursante la opción de cambiar su elección hacia la otra puerta cerrada.\n¿El concursante debería cambiar de puerta?Jugemos el juego interactivamente llamando la función monty().Ahora simulemos el juegoSi decido mantener la puertaSi decido cambiar de puerta","code":"\nmonty <- function() {\n  puertas <- 1:3\n\n  # Se escoge aleatoriamente la puerta del carro\n  puerta_carro <- sample(1:3, 1)\n\n  # Pedimos escoger una puerta al jugador (respuesta debe ser 1, 2 o 3)\n  print(\"El anfitrión dice ‘¡escoge una puerta!’\")\n  puerta_elegida <- scan(what = integer(), nlines = 1, quiet = TRUE)\n\n  # El anfitrión retira una puerta (ni la puerta escogida ni la del carro)\n  if (puerta_elegida != puerta_carro) {\n    puerta_retirada <- puertas[-c(puerta_elegida, puerta_carro)]\n  } else {\n    puerta_retirada <- sample(puertas[-puerta_elegida], 1)\n  }\n\n  print(paste(\"El anfitrión abre la puerta \", puerta_retirada,\n              \" y muestra una cabra!\", sep = \"\"))\n  otra_puerta <- puertas[-c(puerta_elegida, puerta_retirada)]\n  print(paste(\"Quieres cambiar de puerta a la puerta\", otra_puerta, \" (s/n)?\"))\n  reply <- scan(what = character(), nlines = 1, quiet = TRUE)\n\n  # Actua en caso se responsa \"si\"\n  if (substr(reply, 1, 1) == \"s\") {\n    puerta_elegida <- puertas[-c(puerta_elegida, puerta_retirada)]\n  }\n\n  # Imprimir el resultado del juego\n  if (puerta_elegida == puerta_carro) print(\"Ganaste! :D\")\n  else print(\"Perdiste! :(\")\n}\nset.seed(42)\nn <- 10^5\nk <- 3\npuertas <- 1:k\npuerta_carro <- sample(k, n, replace = T)\npuerta_elegida <- sample(k, n, replace = T)\n\nretirar <- function(puerta_elegida, puerta_carro) {\n  x <- puertas[-c(puerta_elegida, puerta_carro)]\n  index <- sample.int(length(x), 1)\n  x[index]\n}\npuerta_retirada <- mapply(retirar, puerta_elegida, puerta_carro)\nmean(puerta_elegida == puerta_carro)## [1] 0.33302\ncambiar <- function(puerta_elegida, puerta_retirada) {\n  x <- puertas[-c(puerta_elegida, puerta_retirada)]\n  index <- sample.int(length(x), 1)\n  x[index]\n}\npuerta_elegida <- mapply(cambiar, puerta_elegida, puerta_retirada)\nmean(puerta_elegida == puerta_carro)## [1] 0.66698"},{"path":"variables-aleatorias.html","id":"variables-aleatorias","chapter":"3 Variables Aleatorias","heading":"3 Variables Aleatorias","text":"","code":""},{"path":"variables-aleatorias.html","id":"distribuciones-incorporadas-en-r","chapter":"3 Variables Aleatorias","heading":"3.1 Distribuciones incorporadas en R","text":"Puede encontrar una lista de las distribuciones de probabilidad disponibles en el paquete stats (incorporado en R) ejecutando ?Distributions.Distribuciones incorporadas en R","code":"\n?Distributions"},{"path":"variables-aleatorias.html","id":"distribución-normal","chapter":"3 Variables Aleatorias","heading":"3.1.1 Distribución Normal","text":"","code":""},{"path":"variables-aleatorias.html","id":"funcion-distribución-acumulada-pnorm","chapter":"3 Variables Aleatorias","heading":"3.1.1.1 Funcion distribución acumulada pnorm","text":"Example 3.1  Supon que el peso de una probeta de concreto está normalmente distribuido con media 12.7kg y desviación estandar 0.45kg.\n¿Cuál es la probabilidad de que una probeta escogida aleatoriamente pese más de 13kg?Parafraseo Si \\(X\\) tiene distribución \\(\\mathcal{N}(12.7,0.45^2)\\), hallar \\(P(X > 13)\\).Usando pnorm:::","code":"\n1 - pnorm(13, mean = 12.7, sd = 0.45)## [1] 0.2524925"},{"path":"variables-aleatorias.html","id":"función-quantil-qnorm","chapter":"3 Variables Aleatorias","heading":"3.1.1.2 Función quantil qnorm","text":"Example 3.2  Supon que las pruebas de IQ están normalmente distribuidas con media 100 y desviación estandar 15.\n¿Cuál es el 95 percentil de la distribución de IQ?Parafraseo Si \\(X\\) tiene distribución \\(\\mathcal{N}(100, 15^2)\\), hallar \\(F^{-1}(0.95)\\).Usando pnorm","code":"\nqnorm(0.95, mean = 100, sd = 15)## [1] 124.6728"},{"path":"variables-aleatorias.html","id":"función-densidad-dnorm","chapter":"3 Variables Aleatorias","heading":"3.1.1.3 Función densidad dnorm","text":"En el caso continuo, hay mucha necesidad de esta función, ya que para calcular probabilidades se usa pnorm.\nSin embargo podemos graficarlo.","code":"\ncurve(dnorm, from = -3, to = 3)\ncurve(dnorm(x, 12.7, 0.45), from = 11, to = 14.5)"},{"path":"variables-aleatorias.html","id":"generación-de-variables-aleatorias-rnorm","chapter":"3 Variables Aleatorias","heading":"3.1.1.4 Generación de variables aleatorias rnorm","text":"En el caso continuo, hay mucha necesidad de esta función, ya que para calcular probabilidades se usa pnorm.\nSin embargo podemos graficarlo.","code":"\nset.seed(42)\nx <- rnorm(10000, mean = 12.7, sd = 0.45)\nhist(x, probability = T)\ncurve(dnorm(x, 12.7, 0.45), from = 11, to = 14.5, add = T)"},{"path":"variables-aleatorias.html","id":"distribución-binomial","chapter":"3 Variables Aleatorias","heading":"3.1.2 Distribución Binomial","text":"","code":""},{"path":"variables-aleatorias.html","id":"función-densidad-dbinom","chapter":"3 Variables Aleatorias","heading":"3.1.2.1 Función densidad dbinom","text":"Example 3.3  Supon que un foco tiene una probabilidad de 0.2 de tener defectos.\nSupon que un contenedor contiene 25 focos\n¿Cuál es la probabilidad de que un contenedor escogido aleatoriamente tenga exactamente 1 foco defectuoso?Parafraseo Si \\(X\\) tiene distribución \\(\\mathcal{Bin}(25, 0.2)\\), hallar \\(P(X=1)\\).Usando dbinom","code":"\ndbinom(1, size = 25, prob = 0.2)## [1] 0.02361183\nplot(dbinom(1:25, 25, 0.2), type = \"h\")"},{"path":"variables-aleatorias.html","id":"función-distrubción-acumulada-pbinom","chapter":"3 Variables Aleatorias","heading":"3.1.2.2 Función distrubción acumulada pbinom","text":"Example 3.4  Supon que un foco tiene una probabilidad de 0.2 de tener defectos.\nSupon que un contenedor contiene 25 focos.\n¿Cuál es la probabilidad de que un contenedor escogido aleatoriamente tenga lo más un foco defectuoso?Parafraseo Si \\(X\\) tiene distribución \\(\\mathcal{Bin}(25, 0.2)\\), hallar \\(P(X \\le 1)\\).Usando pbinom","code":"\npbinom(1, size = 25, prob = 0.2)## [1] 0.02738973\nplot(0:25, pbinom(0:25, 25, 0.2), type = \"S\")\nrval <- approxfun(\n  0:25, pbinom(0:25, 25, 0.2),\n  yleft = 0, yright = 1, ties = \"ordered\", method = \"constant\"\n)\nclass(rval) <- c(\"ecdf\", \"stepfun\", class(rval))\nplot(rval, main = \"Distribución Binomial\", ylab = \"Probabilidad\")"},{"path":"variables-aleatorias.html","id":"función-quantile-qbinom","chapter":"3 Variables Aleatorias","heading":"3.1.2.3 Función quantile qbinom","text":"Para distribuciones discretas, el quantil está definido como el menor valor \\(x\\) tal que \\(F(x) \\ge p\\).Example 3.5  ¿Cuál es el percentil 10, 20, … , 90 de una distribución \\(\\mathcal{Bin}(25, 0.2)\\)?Solution. Usando qbinom","code":"\nqbinom(0.1, size = 25, prob = 0.2)## [1] 3\nqbinom(seq(0.1, 0.9, 0.1), size = 25, prob = 0.2)## [1] 3 3 4 4 5 5 6 7 8"},{"path":"variables-aleatorias.html","id":"generación-de-números-aleatorios-rbinom","chapter":"3 Variables Aleatorias","heading":"3.1.2.4 Generación de números aleatorios rbinom","text":"","code":"\nset.seed(42)\nx <- rbinom(1000, size = 25, prob = 0.2)\ntable(x)## x\n##   0   1   2   3   4   5   6   7   8   9  10  11  12 \n##   9  21  77 148 185 196 151  95  79  29   7   2   1\nplot(table(x))"},{"path":"variables-aleatorias.html","id":"generación-de-números-aleatorios-de-otras-distribuciones","chapter":"3 Variables Aleatorias","heading":"3.2 Generación de números aleatorios de otras distribuciones","text":"","code":""},{"path":"variables-aleatorias.html","id":"transformación-inversa","chapter":"3 Variables Aleatorias","heading":"3.2.1 Transformación inversa","text":"Fuente: Christian Robert, George Casella - Montecarlo Statistical Methods - SpringerDefinition 3.1  (Inversa generalizada) Para una función distribución \\(F\\) en \\(\\mathbb{R}\\), la inversa generalizada de \\(F\\), \\(F^-\\), está definida por\n\\[\n  F^{-}(u) = \\inf\\{x : F(x) \\ge u\\}.\n\\]El siguiente lema nos da una representación de cualquier variable como una transformación de una variable aleatoria uniforme.Lemma 3.1  Si \\(U \\sim \\mathcal{U}_ {[0, 1]}\\), entonces la variable aleatoria \\(F^-(U)\\) tiene distribución \\(F\\).Proof. Para todo \\(u \\[0, 1]\\) y para todo \\(x \\F^-([0, 1])\\), la función inversa generalizada satisface\n\\[\n  F(F^-(u)) \\ge u \\text{ y } F^{-}(F(x)) \\le x.\n\\]\nEntonces,\n\\[\n  \\{(u, x) :  F^{-}(u) \\le x \\} = \\{(u,x) : F(x) \\ge u\\}\n\\]\ny\n\\[\n  P(F^-(U) \\le x) = P(U \\ge F(x)) = F(x)\n\\]Example 3.6  (Distribución Exponencial) Si \\(X \\sim \\mathcal{Exp}(1)\\), así \\(F(x) = 1-e^{-x}\\), luego \\(F^-(u) = -\\log(1 - u)\\).\nEntonces, por el lema 3.1 \\(X = F^-(U) = -\\log(1 - U) = -\\log(U)\\).Example 3.7  (Distribución Triangular) Generamos una muestra aleatoria de una distribución triangular de mínimo \\(\\), moda \\(b\\) y máximo \\(c\\).\n\\[\n  f = \\begin{cases}\n    \\frac{2(x-)}{(c-)(b-)} & x \\[,b] \\\\\n    \\frac{2(x-c)}{(c-)(b-c)} & x \\[b,c]\n  \\end{cases}\n\\]\\[\nF^-(p) = \\begin{cases}\n\\sqrt{(c-)(b-)p} + & p \\\\left[0, \\frac{b-}{c-}\\right] \\\\\n-\\sqrt{(c-)(b-c)(p-1)} + c & p \\\\left[\\frac{b-}{c-}, 1\\right]\n\\end{cases}\n\\]","code":"\nx <- -log(runif(10000))\nhist(x, probability = T)\ncurve(dexp, add = T)\nf <- function(x, a, b, c) {\n  ifelse(\n    x < b,\n    2 * (x - a) / ((c - a) * (b - a)),\n    2 * (x - c) / ((c - a) * (b - c))\n  )\n}\na <- 1\nb <- 2\nc <- 3\ncurve(f(x, a, b, c), from = a, to = c)\nset.seed(42)\nF_inv <-  function(p, a, b, c) {\n  ifelse(\n    p < (b - a) / (c - a),\n    sqrt((c - a) * (b - a) * p) + a,\n    -sqrt((c - a) * (b - c) * (p - 1)) + c\n  )\n}\nx <- F_inv(runif(10000), a = 1, b = 2, c = 3)\nhist(x, probability = T)\ncurve(f(x, a, b, c), from = a, to = c, add = T)"},{"path":"percolation.html","id":"percolation","chapter":"4 Percolation","heading":"4 Percolation","text":"","code":""},{"path":"percolation.html","id":"bond-percolation","chapter":"4 Percolation","heading":"4.1 Bond Percolation","text":"Posible motivación:\nImagina que un vértice de una malla entera \\(d\\)-dimensional está ocupado por una persona y que dos vecinos son amigos con una probabilidad fija \\(p\\), independientemente.\nSi una enfermedad solamente puede contagiarse entre amigos,\n¿Cuál es la probabilidad de que la infección introducida en el origen resulte en una epidemia (que una cantidad infinita de personas se contagie)?Definition 4.1  (Bond Percolation) Para cada arista \\(e\\) que conecta dos vecinos, sea\n\\[\n\\xi(e) \\sim Bernoulli(p), \\text{independiente}\n\\]La arista \\(e\\) están abiertas si \\(\\xi(e) = 1\\) y está cerrada si \\(\\xi(e) = 0\\).Escribimos \\(x \\leftrightarrow\\) cuando existe un camino abierto que conecta \\(x\\) e \\(y\\).Definition 4.2  (Cluster abierto en rl vértice $x$) \\[ C_x = \\{y\\\\mathbb{Z}^d \\;:\\; x \\leftrightarrow\\} \\].Definition 4.3  (Probabilidad de percolación) \\[ \\theta(p) = P_p(|C_0| = \\infty) \\].Lemma 4.1  \\(\\theta\\) es decrecienteLemma 4.2  ((Hammersley)) En \\(\\mathbb{Z}^d\\), si \\(p\\mu(\\mathbb{Z}^d) < 1\\), entonces \\(\\theta(p) = 0\\), donde \\(\\mu(\\mathbb{Z}^d)\\) es la constante de conectividad.Lemma 4.3  ((Peierls)) En \\(\\mathbb{Z}^d\\), \\(d \\ge 2\\), si \\((1-p)\\mu(\\mathbb{Z}^2) < 1\\), entonces \\(\\theta(p) \\ge 0\\)Lemma 4.4  Para cada \\(d \\ge 2\\), existe \\(p_c(\\mathbb{Z}^d) \\]0,1[\\) tal que\\(\\theta(p) = 0\\) si \\(p < p_c(\\mathbb{Z}^d)\\)\\(\\theta(p) > 0\\) si \\(p > p_c(\\mathbb{Z}^d)\\)","code":""}]
